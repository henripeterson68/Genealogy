Termux App on android
===================
Termux combines powerful terminal emulation with an extensive Linux package collection :
* Enjoy the bash and zsh shells.
* Edit files with nano and vim.
* Access servers over ssh.
* Compile code with gcc and clang.
* Use the python console as a pocket calculator.
* Check out projects with git and subversion.
* Run text-based games with frotz.

At first start a small base system is downloaded - desired packages can then be installed using the apt package manager known from the Debian and Ubuntu Linux distributions. Access the built-in help by long-pressing anywhere on the terminal and selecting the Help menu option to learn more.

PRoot
-----------
PRoot is a user-space implementation of chroot, mount --bind, and binfmt_misc. This means that users don't need any privileges or setup to do things like using an arbitrary directory as the new root filesystem, making files accessible somewhere else in the filesystem hierarchy, or executing programs built for another CPU architecture transparently through QEMU user-mode.

You can install PRoot with this command:
~ $ pkg install proot
~ $ 

Termux maintains its own version of PRoot, which is compatible with the latest Android OS versions. You can find its source code at https://github.com/termux/proot.

PRoot-distro
---------------------
Installing Linux distributions
Termux provides a package proot-distro which takes care of management of the Linux distributions inside Termux.
You can install this utility by executing:
~ $ pkg install proot-distro
~ $ 

For now it supports these distributions:
	Alpine Linux (edge)
	Arch Linux / Arch Linux 32 / Arch Linux ARM
	Debian (stable)
	Fedora 35
	Manjaro AArch64
	OpenSUSE (Tumbleweed)
	Ubuntu (22.04)
	Void Linux

To install distribution, just run this command (assuming proot-distro is installed):
~ $ proot-distro install <alias>
~ $ 

where "<alias>" should be replaced by chosen distribution, e.g. "alpine".
Note that it is expected that you have a stable Internet connection during installation, otherwise download may fail.

After installation, you can start a shell session by executing next command:
~ $ proot-distro login <alias>
~ $ 

Here is a basic overview of the available proot-distro functionality:
	proot-distro list - show the supported distributions and their status.
	proot-distro install - install a distribution.
	proot-distro login - start a root shell for the distribution.
	proot-distro remove - uninstall the distribution.
	proot-distro reset - reinstall the distribution.

Run proot-distro help for built-in usage information.
Note that each of commands (with exception of "list") has own built-in usage information which can be viewed by supplying "--help" as argument.
More detailed explanation about available functions you can find at project page: https://github.com/termux/proot-distro#functionality-overview

Example of installing Ubuntu and launching shell:
~ $ proot-distro install ubuntu
~ $ 

~ $ proot-distro login ubuntu
root@localhost:~#

5. Mettre Ã  jour les paquets et installer Node.js et npm :
Update and upgrade all packages:
root@localhost:~# apt update
Fetched 5,109 kB in 3s (1,510 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
30 packages can be upgraded. Run 'apt list --upgradable' to see them.
root@localhost:~# 

Upgrade upgradable packages:
root@localhost:~# apt upgrade
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Calculating upgrade... Done
The following packages will be upgraded:
  apt gir1.2-glib-2.0 libapt-pkg6.0t64 libglib2.0-0t64 libglib2.0-bin libglib2.0-data libgssapi-krb5-2 libk5crypto3 libkrb5-3 libkrb5support0 libpam-modules
  libpam-modules-bin libpam-runtime libpam-systemd libpam0g libpython3.12-minimal libpython3.12-stdlib libsqlite3-0 libsystemd-shared libsystemd0 libudev1 linux-libc-dev
  openssh-client python3-pkg-resources python3.12 python3.12-minimal systemd systemd-dev systemd-sysv tzdata
30 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 21.2 MB of archives.
After this operation, 33.8 kB of additional disk space will be used.
Do you want to continue? [Y/n] Y
root@localhost:~#

Install modejs and npm packages: 
apt install nodejs npm
